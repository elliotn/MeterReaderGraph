// NOTE: The file "apksign.properties" is required for release builds.
// It must contain the following key/value pairs (with real values):
//
//   keystore=/some/path/keystore/some.keystore
//   storePassword=<real password>
//   keyAlias=<real alias>
//   keyPassword=<real password #2>
def apksignFile = "apksign.properties"
File signFile = rootProject.file(apksignFile)


apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'

repositories {
    maven { url "https://jitpack.io" }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.github.PhilJay:MPAndroidChart:v2.1.3'
    implementation 'com.android.volley:volley:1.2.1'
    implementation 'com.jakewharton:butterknife:10.2.3'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.concurrent:concurrent-futures:1.1.0'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.work:work-runtime-ktx:2.9.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.3'
}

android {
    namespace 'com.nathanson.meterreader'
    compileSdk 34

    defaultConfig {
        applicationId "com.nathanson.meterreader"
        minSdkVersion 31
        targetSdkVersion 34
        versionCode 4
        versionName "1.0.3"
    }

    viewBinding {
        enabled = true
    }

    // pull APK signing information from "apksign.properties"
    // if file exists in *project* root; for this project it is
    // the parent dir.
    //
    // code taken from:
    // http://stackoverflow.com/questions/18328730/how-to-create-a-release-signed-apk-file-using-gradle
    if (signFile.exists()) {

        Properties properties = new Properties()
        properties.load(new FileInputStream(signFile))
        signingConfigs {
            release {
                storeFile rootProject.file(properties['keystore'])
                storePassword properties['storePassword']
                keyAlias properties['keyAlias']
                keyPassword properties['keyPassword']
            }
        }
    } else {
        // TODO: figure out how to remove this empty rule and
        // throw an exception when apksignFile does not exist.
        signingConfigs {
            release {
            }
        }
    }


    buildTypes {
        named("debug") {
            shrinkResources = false
            minifyEnabled = false
        }

        // TODO: if ever...
            //        release {
            //            // remove unused resources
            //            shrinkResources true
            //            minifyEnabled false
            //
            //            signingConfig signingConfigs.release
            //        }
    }

    // added for butterknife.
    lintOptions {
        disable 'InvalidPackage'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}





